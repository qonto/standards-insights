http:
  host: 127.0.0.1
  port: 3002
  # optional timeout configuration
  write-timeout: 10
  read-timeout: 10
  read-header-timeout: 10
  # optional tls configuration
  #cert-path: "/tmp/cert.pem"
  #key-path: "/tmp/key/key"
  #ca-cert-path: "/tmp/cacert.pem"
  insecure-skip-verify: false
  client-auth-type: "RequireAndVerifyClientCert"
  # expose the configuration file on /config
  expose-configuration: false

# labels to add to the Prometheus metrics exposed by the HTTP server
labels:
  - category
  - owner
  - level
  - team

interval: 10

providers:
  # Static list of projects to check
  static:
    - name: "qonto-api"
      url: https://gitlab.qonto.co/qonto/qonto-api
      branch: "master"
      path: "/tmp/projects/qonto-api"
      labels:
        team: sre
    - name: "biller"
      url: https://gitlab.qonto.co/qonto/qonto-biller
      branch: "master"
      path: "/tmp/projects/qonto-biller"
      labels:
        team: pricing
    - name: "memberships"
      url: https://gitlab.qonto.co/back/memberships
      branch: "master"
      path: "/tmp/projects/memberships"
      labels:
        team: spend-management        
  # The ArgoCD provider will retrieve projects from ArgoCD and use the Spec.Source.RepoURL url to fetch the
  # projects. ArgoCD applications labels will automatically be added as labels to the project.
#  argocd:
#    url: "argocd-url"
#    projects:
#      - project-to-use
#    selector: "app=foo"
#    base-path: "/tmp/base"
#    # Use ARGOCD_AUTH_TOKEN to pass the ArgoCD authentication token
#
#  gitlab:
#    token: # can also use $GITLAB_TOKEN
#    url: 'https://gitlab.example.com/api/v4'
#    topics:
#      - gitlab repository topic
#    base-path: ./tmp/gitlab
#    search: #search projects

# Optional Git configuration to clone the projects (pick one)
git:
  basic-auth:
    username: oauth2
    password:
  #private-key:
    #path: /Users/stefano.celentano/.ssh/id_rsa
    #password: 






groups:
  - name: golang
    apply-on-sub-projects: false
    checks:
      - go-version-latest
      - go-main
    when:
      - golang-projects
  - name: paseto-group
    apply-on-sub-projects: true
    checks:
      - paseto-migration-check
    when:
      - ruby-controller
      - ruby-projects

checks:
  - name: go-version-latest
    labels:
      category: upgrade
      severity: critical
      owner: backend
    rules:
      - go-version-latest
  - name: paseto-migration-check
    labels:
      category: upgrade
      severity: critical
      owner: backend
    rules:
      - paseto-migration-rule   
  - name: go-main
    operator: and
    labels:
      category: misc
      severity: minor
      owner: backend
    rules:
      - go-main
      - go-version-latest
  - name: grep-test
    labels:
      category: misc
      severity: minor
      owner: backend
    rules:
      - grep-rule-fn

rules:
  - name: ruby-projects
    files:
      - path: "Gemfile"
        exists: true
  - name: ruby-controller
    grep:
      - recursive: true
        pattern: "class .*<.*Controller"
        match: true   
        extended-regexp: true 
  - name: golang-projects
    files:
      - path: "go.mod"
        exists: true  
  - name: go-version-latest
    files:
      - path: "go.mod"
        contains: "go 1.21"
  - name: paseto-migration-rule
    grep:
      - recursive: false
        pattern: "Concerns::FullPasetoOrJwtAuthentifiable"
        match: true
  - name: go-main
    files:
      - path: "main.go"
        contains: "^(func main)"
  - name: grep-rule-fn
    grep:
      - path: "."
        recursive: true
        pattern: "NewGrepRule"
        match: true
  - name: allowed-projects
    project:
      - names: 
          - awesome-project1
          - awesome-project2
        match: true
  - name: excluded-projects
    project:
      - names: 
          - bad-project1
          - bad-project2
        match: false
  - name: matching-all-labels
    project:
      - labels: 
          team: backend
          language: golang
        match: true
  - name: excluding-all-labels
    project:
      - labels: 
          team: backend
          language: golang
        match: false